{"version":3,"sources":["webpack:///./src/actions/adminActions.js","webpack:///./src/actions/data.js","webpack:///./src/components/containers/Login.jsx","webpack:///./src/consts/actionTypes.js"],"names":["adminActions","login","payload","dispatch","type","actionTypes","admin","LOGGING","LOGIN_SUCCESS","data","admins","id","name","email","password","workers","manager_id","w_1","designation","w_2","w_3","w_4","Login","React","Component","mapStateToProps","state","props","mapDispatchToProps","WORKERS_FETCH","WORKERS_FETCH_SUCCESS","LOGIN_FAILE","LOGOUT"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe;AAAA,SAAa;AAChCC,WAAO,eAACC,OAAD,EAAa;AAClBC,eAAS,EAAEC,MAAMC,sBAAYC,KAAZ,CAAkBC,OAA1B,EAAT;AACAJ,eAAS,EAAEC,MAAMC,sBAAYC,KAAZ,CAAkBE,aAA1B,EAAyCN,SAAS,EAAlD,EAAT;AACD;AAJ+B,GAAb;AAAA,CAArB;;kBAOeF,Y;;;;;;;;;;;;;;;;;ACXf,IAAMS,OAAO;AACXC,UAAQ,CACN;AACEC,QAAI,CADN;AAEEC,UAAM,gBAFR;AAGEC,WAAO,oBAHT;AAIEC,cAAU;AAJZ,GADM,EAON;AACEH,QAAI,CADN;AAEEC,UAAM,QAFR;AAGEC,WAAO,oBAHT;AAIEC,cAAU;AAJZ,GAPM,CADG;;AAgBXC,WAAS,CACP;AACEC,gBAAY,CADd;AAEEL,QAAIM,GAFN;AAGEL,UAAM,UAHR;AAIEM,iBAAa;AAJf,GADO,EAOP;AACEF,gBAAY,CADd;AAEEL,QAAIQ,GAFN;AAGEP,UAAM,UAHR;AAIEM,iBAAa;AAJf,GAPO,EAaP;AACEF,gBAAY,CADd;AAEEL,QAAIS,GAFN;AAGER,UAAM,UAHR;AAIEM,iBAAa;AAJf,GAbO,EAmBP;AACEF,gBAAY,CADd;AAEEL,QAAIU,GAFN;AAGET,UAAM,UAHR;AAIEM,iBAAa;AAJf,GAnBO;AAhBE,CAAb;;kBA4CeT,I;;;;;;;;;;;;;;;;;;;;AC5Cf;;;;AACA;;AAEA;;;;;;;;;;;;AACA;;AAEA;AACA;;AAEA;;IAEMa,K;;;;;;;;;;;;;AAEJ;AACA;AACA;AACA;AACA;;6BAES;AACP,aACE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA,YAAK,WAAU,iBAAf;AACE;AAAA;AAAA,cAAK,WAAU,oBAAf;AACE;AAAA;AAAA,gBAAM,IAAG,OAAT,EAAiB,WAAU,iCAA3B;AACE;AAAA;AAAA,kBAAI,WAAU,cAAd;AAAA;AAAA,eADF;AAEE;AAAA;AAAA,kBAAG,WAAU,eAAb;AAAA;AAAA,eAFF;AAGE;AAAA;AAAA,kBAAK,WAAU,YAAf;AACE,yDAAO,MAAK,OAAZ,EAAoB,WAAU,cAA9B,EAA6C,IAAG,YAAhD,EAA6D,aAAY,eAAzE;AADF,eAHF;AAME;AAAA;AAAA,kBAAK,WAAU,YAAf;AACE,yDAAO,MAAK,UAAZ,EAAuB,WAAU,cAAjC,EAAgD,IAAG,eAAnD,EAAmE,aAAY,UAA/E;AADF,eANF;AASE;AAAA;AAAA,kBAAK,WAAU,QAAf;AACE;AAAA;AAAA,oBAAG,MAAK,YAAR;AAAA;AAAA;AADF,eATF;AAYE;AAAA;AAAA,kBAAQ,MAAK,QAAb,EAAsB,WAAU,2BAAhC;AAAA;AAAA;AAZF;AADF;AADF;AADF,OADF;AAsBD;;;;EA/BiBC,gBAAMC,S;;AAkC1B,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACxC;AACD,CAFD;;AAIA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACzB,QAAD,EAAc;AACvC,SAAO,4BAAaA,QAAb,CAAP;AACD,CAFD;;kBAIe,yBAAQsB,eAAR,EAAyBG,kBAAzB,EAA6CN,KAA7C,C;;;;;;;;;;;;;;;;;ACrDf,IAAMjB,cAAc;AAClBU,WAAS;AACPc,mBAAe,eADR;AAEPC,2BAAuB;AAFhB,GADS;AAKlBxB,SAAO;AACLC,aAAS,SADJ;AAELC,mBAAe,eAFV;AAGLuB,iBAAa,YAHR;AAILC,YAAQ;AAJH;AALW,CAApB;;kBAae3B,W","file":"main.6c959eaf78956a1af7b7.hot-update.js","sourcesContent":["import actionTypes from '../consts/actionTypes';\n\nimport data from './data';\n\nconst adminActions = dispatch => ({\n  login: (payload) => {\n    dispatch({ type: actionTypes.admin.LOGGING });\n    dispatch({ type: actionTypes.admin.LOGIN_SUCCESS, payload: { } });\n  }\n});\n\nexport default adminActions;\n","const data = {\n  admins: [\n    {\n      id: 1,\n      name: \"Vishal Singhal\",\n      email: \"vishal@wakecap.com\",\n      password: \"password\"\n    },\n    {\n      id: 2,\n      name: \"Hassan\",\n      email: \"hassan@wakecap.com\",\n      password: \"password\"\n    }\n  ],\n\n  workers: [\n    {\n      manager_id: 1,\n      id: w_1,\n      name: \"Worker 1\",\n      designation: \"Foreman\"\n    },\n    {\n      manager_id: 1,\n      id: w_2,\n      name: \"Worker 2\",\n      designation: \"abc\"\n    },\n    {\n      manager_id: 1,\n      id: w_3,\n      name: \"Worker 3\",\n      designation: \"designation\"\n    },\n    {\n      manager_id: 1,\n      id: w_4,\n      name: \"Worker 4\",\n      designation: \"designation\"\n    }\n  ]\n}\n\nexport default data;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport adminActions from '../../actions/adminActions';\n// import listingSelector from '../../selectors/listingSelector';\n\n// import List from '../core/List';\n// import withLoader from '../core/withLoader';\n\n// import Bucket from '../presenters/Bucket';\n\nclass Login extends React.Component {\n\n  // componentWillMount() {\n  //   if(this.props.fetching === undefined) {\n  //     this.props.fetchListing();\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"login col-md-12\">\n          <div className=\"row vertical-align\">\n            <form id=\"Login\" className=\"login-form col-md-4 offset-md-4\">\n              <h2 className=\"company-logo\">WakeCap</h2>\n              <p className=\"login-message\">Please enter your email and password</p>\n              <div className=\"form-group\">\n                <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email Address\"/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\"/>\n              </div>\n              <div className=\"forgot\">\n                <a href=\"reset.html\">Forgot password?</a>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  // return customizeSelector(state,props);\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return adminActions(dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","const actionTypes = {\n  workers: {\n    WORKERS_FETCH: \"WORKERS_FETCH\",\n    WORKERS_FETCH_SUCCESS: \"WORKERS_FETCH_SUCCESS\"\n  },\n  admin: {\n    LOGGING: \"LOGGING\",\n    LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n    LOGIN_FAILE: \"LOGIN_FAIL\",\n    LOGOUT: \"LOGOUT\"\n  }\n};\n\nexport default actionTypes;\n"],"sourceRoot":""}