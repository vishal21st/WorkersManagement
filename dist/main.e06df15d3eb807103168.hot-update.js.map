{"version":3,"sources":["webpack:///./src/components/containers/Login.jsx"],"names":["Login","email","refs","value","password","setState","emailError","validateEmail","ex","re","test","toLowerCase","e","preventDefault","validate","props","login","state","validateAndLogin","bind","React","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;;;;;;;;;AACA;;AAEA;AACA;;AAEA;;IAEMA,K;;;;;;;;;;;yCAEiB;AACnB;AACA;AACA;AACD;;;+BAEU;AACT,UAAMC,QAAQ,KAAKC,IAAL,CAAUD,KAAV,CAAgBE,KAA9B;AACA,UAAMC,WAAW,KAAKF,IAAL,CAAUE,QAAV,CAAmBD,KAApC;;AAEA,UAAIF,SAAS,EAAT,IAAeG,YAAY,EAA/B,EAAmC;AACjC,aAAKC,QAAL,CAAc,EAACC,YAAY,oCAAb,EAAd;AACA,eAAO,KAAP;AACD;;AAED,UAAI,KAAKC,aAAL,CAAmBN,KAAnB,CAAJ,EAA+B;AAC7B,aAAKI,QAAL,CAAc,EAACC,YAAY,IAAb,EAAd;AACA,eAAO,IAAP;AACD,OAHD,MAGQ;AACN,aAAKD,QAAL,CAAc,EAACC,YAAY,oCAAb,EAAd;AACD;AAEF;;;kCAEaL,K,EAAO;AACnB,UAAMO,KAAM,wHAAZ;AACA,aAAOC,GAAGC,IAAH,CAAQT,MAAMU,WAAN,EAAR,CAAP;AACD;;;qCAEgBC,C,EAAG;AAClBA,QAAEC,cAAF;AACA,UAAI,KAAKC,QAAL,EAAJ,EAAqB;AACnB,aAAKC,KAAL,CAAWC,KAAX;AACD;AACF;;;iCAEY;AACX;AACA,UAAI,KAAKC,KAAL,CAAWX,UAAf,EAA2B;AACzB,eAAO,iDAAP;AACD;AACF;;;6BAIQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA,YAAK,WAAU,iBAAf;AACE;AAAA;AAAA,cAAK,WAAU,oBAAf;AACE;AAAA;AAAA,gBAAM,IAAG,OAAT,EAAiB,WAAU,iCAA3B;AACE;AAAA;AAAA,kBAAI,WAAU,cAAd;AAAA;AAAA,eADF;AAEE;AAAA;AAAA,kBAAG,WAAU,eAAb;AAAA;AAAA,eAFF;AAGE;AAAA;AAAA,kBAAK,WAAU,YAAf;AACE,yDAAO,KAAI,OAAX,EAAmB,MAAK,OAAxB,EAAgC,WAAU,cAA1C,EAAyD,IAAG,YAA5D,EAAyE,aAAY,eAArF,GADF;AAEG,qBAAKA,UAAL;AAFH,eAHF;AAOE;AAAA;AAAA,kBAAK,WAAU,YAAf;AACE,yDAAO,KAAI,UAAX,EAAsB,MAAK,UAA3B,EAAsC,WAAU,cAAhD,EAA+D,IAAG,eAAlE,EAAkF,aAAY,UAA9F;AADF,eAPF;AAUE;AAAA;AAAA,kBAAK,WAAU,QAAf;AACE;AAAA;AAAA,oBAAG,MAAK,YAAR;AAAA;AAAA;AADF,eAVF;AAaE;AAAA;AAAA,kBAAQ,MAAK,QAAb,EAAsB,WAAU,2BAAhC,EAA4D,SAAS,KAAKY,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAArE;AAAA;AAAA;AAbF;AADF;AADF;AADF,OADF;AAuBD;;;;EAvEiBC,gBAAMC,S;;AA0E1B,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACL,KAAD,EAAQF,KAAR,EAAkB;AACxC,SAAOE,KAAP;AACD,CAFD;;AAIA,IAAMM,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO,4BAAaA,QAAb,CAAP;AACD,CAFD;;kBAIe,yBAAQF,eAAR,EAAyBC,kBAAzB,EAA6CvB,KAA7C,C","file":"main.e06df15d3eb807103168.hot-update.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nimport adminActions from '../../actions/adminActions';\n// import listingSelector from '../../selectors/listingSelector';\n\n// import List from '../core/List';\n// import withLoader from '../core/withLoader';\n\n// import Bucket from '../presenters/Bucket';\n\nclass Login extends React.Component {\n\n  componentWillMount() {\n    // if (this.props.fetching === undefined) {\n    //   this.props.fetchListing();\n    // }\n  }\n\n  validate() {\n    const email = this.refs.email.value\n    const password = this.refs.password.value\n    \n    if (email == \"\" || password == \"\") {\n      this.setState({emailError: \"Please provide valid email address\"})\n      return false\n    }\n\n    if (this.validateEmail(email)) {\n      this.setState({emailError: null})\n      return true\n    } else  {\n      this.setState({emailError: \"Please provide valid email address\"})\n    }\n\n  }\n  \n  validateEmail(email) {\n    const ex =  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return re.test(email.toLowerCase())\n  }\n\n  validateAndLogin(e) {\n    e.preventDefault()\n    if (this.validate()) {\n      this.props.login()\n    }\n  }\n\n  emailError() {\n    debugger\n    if (this.state.emailError) {\n      return \"<div>Please provide a valid email address</div>\"\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"login col-md-12\">\n          <div className=\"row vertical-align\">\n            <form id=\"Login\" className=\"login-form col-md-4 offset-md-4\">\n              <h2 className=\"company-logo\">WakeCap</h2>\n              <p className=\"login-message\">Please enter your email and password</p>\n              <div className=\"form-group\">\n                <input ref=\"email\" type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email Address\"/>\n                {this.emailError()}\n              </div>\n              <div className=\"form-group\">\n                <input ref=\"password\" type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\"/>\n              </div>\n              <div className=\"forgot\">\n                <a href=\"reset.html\">Forgot password?</a>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.validateAndLogin.bind(this)}>Login</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return adminActions(dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}